<?xml version="1.0"?>
<launch>
  <!--<arg name="frame" default="crazyflie" />-->
  <arg name="frame" default="crazyflie/base_link" />
  <arg name="tf_prefix" default="crazyflie" />

  <include file="$(find crazyflie_driver)/launch/crazyflie_server.launch">
  </include>

  <group ns="crazyflie">
    <include file="$(find crazyflie_driver)/launch/crazyflie_add.launch">
      <arg name="uri" default="radio://0/30/250K" />
      <arg name="tf_prefix" value="crazyflie" />
      <arg name="roll_trim" default="0.5" />
      <arg name="pitch_trim" default="0.0" />
      <arg name="enable_logging" value="True" />
      <arg name="height_hold" value="True" />
    </include>
  </group>

  <node name="crazyflie_tracker" pkg="crazyflie_auto" type="tracker-uvc.py" output="screen" />

  <!-- static transform between world and kinect with z offset of 1 meter and yaw of -pi/2
       (rotation about Z), pitch of 0 (rotation about Y), and roll of pi/2 (rotation about X).  -->
  <node pkg="tf" type="static_transform_publisher" name="baselink" args="0 0 1 -1.5708 0 -1.5708 /world /camera_link 50" />

  <group ns="camera">
      <node pkg="libuvc_camera" type="camera_node" name="camera">
        <!-- Parameters used to find the camera -->
        <param name="vendor" value="0x0411"/>
        <param name="product" value="0x0262"/>
        <param name="serial" value="0"/>
        <!-- If the above parameters aren't unique, choose the first match: -->
        <param name="index" value="1"/>

        <!-- Image size and type -->
        <param name="width" value="640"/>
        <param name="height" value="480"/>
        <!-- choose whichever uncompressed format the camera supports: -->
        <param name="video_mode" value="yuyv"/> <!-- or yuyv/nv12/jpeg -->
        <param name="frame_rate" value="30"/>

        <param name="timestamp_method" value="start"/> <!-- start of frame -->
        <!-- param name="camera_info_url" value="file:///tmp/cam.yaml"/-->
        <param name="auto_exposure" value="3"/> <!-- use aperture_priority auto exposure -->
        <param name="auto_white_balance" value="false"/>
      </node>
  </group>

  <node name="crazyflie_window" pkg="crazyflie_auto" type="takeoff_test.py" output="screen">
      <param name="frame" value="$(arg frame)" />
      <param name="cam_frame" value="camera_rgb_optical_frame" />
      <param name="rate" value="10" />
  </node>

  <node name="crazyflie_controller" pkg="crazyflie_auto" type="control_crazyflie.py" output="screen">
      <param name="frame" value="$(arg frame)" />
      <rosparam command="load" file="$(find crazyflie_auto)/config/crazyflie2.yaml" />
  </node>

  <!-- <param name="robot_description" textfile="$(find crazyflie_auto)/urdf/cf_target.urdf" />-->
  <!-- set parameter on Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find crazyflie_auto)/urdf/kinect.urdf.xacro'" />
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
  <!--node name="rviz" pkg="rviz" type="rviz" args="-d $(find crazyflie_auto)/launch/crazyflie_r200.rviz" required="true" /-->
  <!-- param name="robot_description" command="$(find xacro)/xacro.py $(find crazyflie_description)/urdf/crazyflie2.urdf.xacro" /-->
</launch>
